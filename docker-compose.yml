# docker stack deploy -c docker-compose.yml whisper
version: '3.5'

services:

  whisper:
    build: .
    image: abilioesteves/whisper:0.0.1
    ports:
      - "7070:7070"
    environment:
      - WHISPER_PORT=7070
      - WHISPER_BASE_UI_PATH=/www/
      - WHISPER_HYDRA_ENDPOINT=http://hydra:4444/

  hydra-migrate:
    image: oryd/hydra:v1.0.0-rc.6_oryOS.10
    environment:
      - DATABASE_URL=postgres://hydra:secret@postgresd-hydra:5432/hydra?sslmode=disable
    command:
      migrate sql -e
    restart: on-failure

  consent:
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
    image: oryd/hydra-login-consent-node:v1.0.0-rc.2
    links:
      - hydra
    ports:
      - "3000:3000"
    restart: unless-stopped

  hydra:
    image: oryd/hydra:v1.0.0-rc.6_oryOS.10
    depends_on:
      - hydra-migrate
    ports:
      # Public port
      - "4444:4444"
      # Admin port
      - "4445:4445"
      # Port for hydra token user
      - "5555:5555"
    command:
      serve all --dangerous-force-http
    environment:
      - OAUTH2_ISSUER_URL=http://localhost:4444
      - OAUTH2_CONSENT_URL=http://localhost:7070/consent
      - OAUTH2_LOGIN_URL=http://localhost:7070/login
      - DATABASE_URL=postgres://hydra:secret@postgresd-hydra:5432/hydra?sslmode=disable
      - SYSTEM_SECRET=youReallyNeedToChangeThis
      - OAUTH2_SHARE_ERROR_DEBUG=1
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=youReallyNeedToChangeThis
      - CORS_ENABLED=true
#     - OAUTH2_ACCESS_TOKEN_STRATEGY=jwt

  postgresd-hydra:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=hydra

  # TODO example client app

  prometheus:
    image: abilioesteves/prometheus:1.0.0
    ports:
      - 9090:9090
    environment:
      - SCRAPE_INTERVAL=15s
      - SCRAPE_TIMEOUT=10s
      - STATIC_SCRAPE_TARGETS=whisper@whisper:7070/metrics

